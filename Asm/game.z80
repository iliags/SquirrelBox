; =============================
; COMPILED WITH SquirrelBox 1.6 alpha 6
; =============================

.nolist
#include "ti83plus.inc"
.list
.ORG userMem-2
 .DB t2ByteTok,tAsmCmp


func_main:
 CALL func_clrHome
 LD A,(global_irow)
 LD (CurRow),A
 LD A,(global_icol)
 LD (CurCol),A
 LD A,46
 LD (local_vars+0),A
 CALL func_putChar
 LD A,(global_urow)
 LD (CurRow),A
 LD A,(global_ucol)
 LD (CurCol),A
 LD A,43
 LD (local_vars+0),A
 CALL func_putChar
 LD A,6
 LD (CurRow),A
 LD A,14
 LD (CurCol),A
 LD A,79
 LD (local_vars+0),A
 CALL func_putChar
ADSMBLG_Lbl_main_start:
 CALL func_scanKey
 LD A,(local_vars+0)
 LD (local_vars+1),A
                ; <IF>
 LD A,(local_vars+1)
 CP 1
 JP NZ,ADSMBLG_15
 LD A,(global_urow)
 CP 7
 JP Z,ADSMBLG_Lbl_main_start
                ; <IF>
 LD A,(global_urow)
 ADD A,1
 LD HL,global_irow
 CP (HL)
 JP NZ,ADSMBLG_16
                ; <IF>
 LD A,(global_icol)
 LD HL,global_ucol
 CP (HL)
 JP NZ,ADSMBLG_17
 LD A,(global_irow)
 CP 7
 JP Z,ADSMBLG_Lbl_main_start
 LD A,(global_irow)
 ADD A,1
 LD (global_irow),A
ADSMBLG_17:     ; <End IF>
ADSMBLG_16:     ; <End IF>
 CALL func_erase
 LD A,(global_urow)
 ADD A,1
 LD (global_urow),A
 JP ADSMBLG_18  ; skip else code
ADSMBLG_15:     ; <ELSE>
                ; <IF>
 LD A,(local_vars+1)
 CP 2
 JP NZ,ADSMBLG_19
 LD A,(global_ucol)
 CP 0
 JP Z,ADSMBLG_Lbl_main_start
                ; <IF>
 LD A,(global_ucol)
 SUB 1
 LD HL,global_icol
 CP (HL)
 JP NZ,ADSMBLG_20
                ; <IF>
 LD A,(global_irow)
 LD HL,global_urow
 CP (HL)
 JP NZ,ADSMBLG_21
 LD A,(global_icol)
 CP 0
 JP Z,ADSMBLG_Lbl_main_start
 LD A,(global_icol)
 SUB 1
 LD (global_icol),A
ADSMBLG_21:     ; <End IF>
ADSMBLG_20:     ; <End IF>
 CALL func_erase
 LD A,(global_ucol)
 SUB 1
 LD (global_ucol),A
 JP ADSMBLG_22  ; skip else code
ADSMBLG_19:     ; <ELSE>
                ; <IF>
 LD A,(local_vars+1)
 CP 3
 JP NZ,ADSMBLG_23
 LD A,(global_ucol)
 CP 15
 JP Z,ADSMBLG_Lbl_main_start
                ; <IF>
 LD A,(global_ucol)
 ADD A,1
 LD HL,global_icol
 CP (HL)
 JP NZ,ADSMBLG_24
                ; <IF>
 LD A,(global_irow)
 LD HL,global_urow
 CP (HL)
 JP NZ,ADSMBLG_25
 LD A,(global_icol)
 CP 15
 JP Z,ADSMBLG_Lbl_main_start
 LD A,(global_icol)
 ADD A,1
 LD (global_icol),A
ADSMBLG_25:     ; <End IF>
ADSMBLG_24:     ; <End IF>
 CALL func_erase
 LD A,(global_ucol)
 ADD A,1
 LD (global_ucol),A
 JP ADSMBLG_26  ; skip else code
ADSMBLG_23:     ; <ELSE>
                ; <IF>
 LD A,(local_vars+1)
 CP 4
 JP NZ,ADSMBLG_27
 LD A,(global_urow)
 CP 0
 JP Z,ADSMBLG_Lbl_main_start
                ; <IF>
 LD A,(global_urow)
 SUB 1
 LD HL,global_irow
 CP (HL)
 JP NZ,ADSMBLG_28
                ; <IF>
 LD A,(global_icol)
 LD HL,global_ucol
 CP (HL)
 JP NZ,ADSMBLG_29
 LD A,(global_irow)
 CP 0
 JP Z,ADSMBLG_Lbl_main_start
 LD A,(global_irow)
 SUB 1
 LD (global_irow),A
ADSMBLG_29:     ; <End IF>
ADSMBLG_28:     ; <End IF>
 CALL func_erase
 LD A,(global_urow)
 SUB 1
 LD (global_urow),A
ADSMBLG_27:     ; <End IF>
ADSMBLG_26:     ; <End IF-ELSE>
ADSMBLG_22:     ; <End IF-ELSE>
ADSMBLG_18:     ; <End IF-ELSE>
 LD A,(global_urow)
 LD (CurRow),A
 LD A,(global_ucol)
 LD (CurCol),A
 LD A,43
 LD (local_vars+0),A
 CALL func_putChar
 LD A,(global_irow)
 LD (CurRow),A
 LD A,(global_icol)
 LD (CurCol),A
 LD A,46
 LD (local_vars+0),A
 CALL func_putChar
 LD A,6
 LD (CurRow),A
 LD A,14
 LD (CurCol),A
 LD A,79
 LD (local_vars+0),A
 CALL func_putChar
 LD A,(global_irow)
 CP 6
 JP NZ,ADSMBLG_Lbl_main_start
 LD A,(global_icol)
 CP 14
 JP NZ,ADSMBLG_Lbl_main_start
 RET

func_putChar:
 LD A, (local_vars+0)
 B_CALL(_PutMap)
 RET

func_scanKey:
 B_CALL(_GetCSC)
 LD ((local_vars+0)), A
 RET

func_erase:
 LD A,(global_urow)
 LD (CurRow),A
 LD A,(global_ucol)
 LD (CurCol),A
 LD A,32
 LD (local_vars+0),A
 CALL func_putChar
 RET

func_clrHome:
 B_CALL(_ClrScrnFull)
 B_CALL(_HomeUp)
 RET

global_irow:    ; byte irow
 .DB 2

global_icol:    ; byte icol
 .DB 2

global_urow:    ; byte urow
 .DB 6

global_ucol:    ; byte ucol
 .DB 10

local_vars:
 .DB 0,0
.END
.END
